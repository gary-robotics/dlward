---
layout:     post                    # 使用的布局（不需要改）
title:      复数的意义                # 标题 
subtitle:    第一篇                  #副标题
date:       2018-06-20              # 时间
author:     BY Edlward              # 作者
header-img: img/post-bg-2015.jpg    #这篇文章标题背景图片
catalog: true                       # 是否归档
tags:                               #标签
    - 复数
---

## 链接
[链接1](http://www.ruanyifeng.com/blog/2012/09/imaginary_number.html)  
[链接2](https://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/)

傅里叶级数和傅里叶变换其实就是我们之前讨论的特征值与特征向量的问题。<br/><br/> 而由于现实世界中正弦信号是系统的特征向量，所以我们就用傅里叶变换，将研究的信号在频域展开。<br/><br/> 以后如果有人问你为什么要进行傅里叶变换，你就可以半炫耀半学术的告诉他： &ldquo;因为复指数信号是线性时不变系统的特征向量，因此傅里叶变换就是进行特征分解&rdquo; 当然还有其他展开，比如小波，道理是一样的。综上，出现负频率的根本原因就是傅里叶级数（变换）的最小单位是复指数信号，如果用傅里叶级数的另一种形式，把信号表示为一系列正余弦信号的组合，就不存在负频率了。<br/><br/> 即 &ldquo;原信号 = 子信号1 + 子信号2&rdquo;。

[傅里叶分析的方方面面：复正弦、负频率](https://blog.csdn.net/qzhou961/article/details/51425916)  
[复数的指数形式的证明](https://wenku.baidu.com/view/7f3028c30c22590102029d34.html)  
[连载14：复指数信号的物理意义-旋转向量](https://wenku.baidu.com/view/45112d290722192e4536f610.html)  
[正交信号：复数,但不复杂[中译版本]](https://wenku.baidu.com/view/3b645627f12d2af90242e6c1.html)  
[傅里叶变换__经典ppt](https://wenku.baidu.com/view/274c61c3aa00b52acfc7ca8d.html)  
[科学家和工程师的数字信号处理指南作者：Steven W. Smith，博士。](http://www.dspguide.com/pdfbook.htm)  
[理解离散傅立叶变换（三.复数）](https://blog.csdn.net/dznlong/article/list/2)  

[从另一个角度看拉普拉斯变换](https://zhuanlan.zhihu.com/p/40783304)  



```
x=linspace(0,2*pi,1000);
y=exp(1j*x);
polar(2)
hold on
polar(x,abs(y))
hold off

ezplot3('cos(t)', 'sin(t)','t',[0,30*pi])
```


### 螺旋曲线
```
clc;clear;
h = animatedline;
h1=gcf;
view(3);
xl=xlabel('cos(\omegat)');% 
yl=ylabel('sin(\omegat)');% 
zl=zlabel('t');% 
set(xl,'Rotation',30);% 
set(yl,'Rotation',-30);%
grid on;
title('\omega = 1rad/s   Made by J Pan')
axis([-1,1,-1,1,0,4*pi])
N = 200;
t=linspace(0,4*pi,N);
w=1;
x=cos(w*t);
y=sin(w*t);
a = tic; % start timer
for k = 1:N
    addpoints(h,x(k),y(k),t(k));
    hold on
    line([0 x(k)],[0 y(k)],[t(k) t(k)],'Color','red')
    b = toc(a); % check timer
    if b > (1/90)
        drawnow % update screen every 1/30 seconds
        a = tic; % reset timer after updating
    end
end

```

### 拉普拉斯变换
```
clc;clear;
h = animatedline;
h1=gcf;
view(3);
xl=xlabel('cos(\omegat)');% 
yl=ylabel('sin(\omegat)');% 
zl=zlabel('t');% 
set(xl,'Rotation',30);% 
set(yl,'Rotation',-30);%
grid on;
title('\omega = 1rad/s   Made by J Pan')
axis([-1,1,-1,1,0,4*pi])
N = 200;
t=linspace(0,4*pi,N);
w=1;sig=-0.2;
x=exp(sig*t).*cos(w*t);
y=exp(sig*t).*sin(w*t);
a = tic; % start timer
for k = 1:N
    addpoints(h,x(k),y(k),t(k));
    hold on
    line([0 x(k)],[0 y(k)],[t(k) t(k)],'Color','red')
    b = toc(a); % check timer
    if b > (1/90)
        drawnow % update screen every 1/30 seconds
        a = tic; % reset timer after updating
    end
end
```
